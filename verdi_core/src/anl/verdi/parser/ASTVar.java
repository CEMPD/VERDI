/* Generated By:JJTree: Do not edit this line. ASTVar.java */

package anl.verdi.parser;

import anl.verdi.data.DataFrame;
import anl.verdi.formula.IllegalFormulaException;
import anl.verdi.util.FormulaArray;

public class ASTVar extends SimpleNode {

	private String name;
	private int timeStep = -1;
	private FormulaArray array;

  public ASTVar(int id) {
    super(id);
  }

  public ASTVar(Parser p, int id) {
    super(p, id);
  }


	public String getName() {
		return name;
	}

	public void setName(String name) {
		int index = name.lastIndexOf(":");
		if (index == -1) this.name = name;
		else {
			this.name = name.substring(0, index);
			this.timeStep = Integer.parseInt(name.substring(index + 1, name.length()));
		}
	}


	/**
	 * Adds the variable info to the tree info.
	 *
	 * @param info collection of tree info
	 */
	@Override
	public void gatherInfo(ASTTreeInfo info) {
		info.addVarName(name);
		super.gatherInfo(info);
	}


	@Override
	public void preprocess(Frame frame) throws IllegalFormulaException {
		DataFrame data = frame.getValue(name);
		if (data == null) throw new IllegalFormulaException("Array for variable '" + name + "' has not been set");
		array = new FormulaArray(data.getArray());
		
//NOTE: since it doesn't do its work on slicing, let other functions to take care of it		
//		if (timeStep == -1) array = new FormulaArray(data.getArray());
//		else {
//			Slice slice = new Slice();
//			slice.setTimeRange(timeStep, 1);
//			try {
//				array = new FormulaArray(data.slice(slice).getArray());
//			} catch (InvalidRangeException ex) {
//				throw new IllegalFormulaException("Invalid timestep '" + timeStep + "' for variable '" +
//				name + ":" + timeStep + "'", ex);
//			}
//		}
	}

	/**
	 * Evaluates this Node.
	 *
	 * @param frame
	 * @return the result of the evaluation.
	 */
	@Override
	public FormulaArray evaluate(Frame frame) throws IllegalFormulaException {
		return array;
	}
	
	public int getTimeStep() {
		return this.timeStep;
	}
}

/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package anl.verdi.parser;

public interface ParserConstants {

  int EOF = 0;
  int INTEGER_LITERAL = 7;
  int FLOAT = 8;
  int EXPONENT = 9;
  int DECIMAL_LITERAL = 10;
  int GREATER = 11;
  int LESS = 12;
  int EQEQUAL = 13;
  int EQLESS = 14;
  int EQGREATER = 15;
  int NOT_EQUAL = 16;
  int OR = 17;
  int AND = 18;
  int PLUS = 19;
  int MINUS = 20;
  int TIMES = 21;
  int DIV = 22;
  int MOD = 23;
  int POW = 24;
  int ABS = 25;
  int SQRT = 26;
  int SQR = 27;
  int LOG = 28;
  int EXP = 29;
  int LN = 30;
  int SIN = 31;
  int COS = 32;
  int TAN = 33;
  int SIND = 34;
  int COSD = 35;
  int TAND = 36;
  int MEAN = 37;
  int SUM = 38;
  int MINT = 39;
  int MAXT = 40;
  int MINX = 41;
  int MAXX = 42;
  int MINY = 43;
  int MAXY = 44;
  int MINZ = 45;
  int MAXZ = 46;
  int MIN = 47;
  int MAX = 48;
  int E = 49;
  int PI = 50;
  int NROWS = 51;
  int NCOLS = 52;
  int NLAYERS = 53;
  int IDENTIFIER = 57;
  int LETTER = 58;
  int DIGIT = 59;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER_LITERAL>",
    "<FLOAT>",
    "<EXPONENT>",
    "<DECIMAL_LITERAL>",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"**\"",
    "\"abs\"",
    "\"sqrt\"",
    "\"sqr\"",
    "\"log\"",
    "\"exp\"",
    "\"ln\"",
    "\"sin\"",
    "\"cos\"",
    "\"tan\"",
    "\"sind\"",
    "\"cosd\"",
    "\"tand\"",
    "\"mean\"",
    "\"sum\"",
    "\"mint\"",
    "\"maxt\"",
    "\"minx\"",
    "\"maxx\"",
    "\"miny\"",
    "\"maxy\"",
    "\"minz\"",
    "\"maxz\"",
    "\"min\"",
    "\"max\"",
    "\"E\"",
    "\"PI\"",
    "\"NROWS\"",
    "\"NCOLS\"",
    "\"NLAYERS\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}

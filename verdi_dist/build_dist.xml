<project name="verdi64" default="build.dist" basedir=".">

	<property file="build.properties.win64" />
	<property name="env" environment="env" value="env" />
	<property name="JAVA_HOME" value="${jdk.home}" />
	<property name="JRE_HOME" value="${JAVA_HOME}/jre" />
	<property name="dist.dir" value="."/>
	<property name="plugins.dir" value="plugins"/>
	<property name="plugins.dist.dir" value="${dist.dir}/${plugins.dir}"/>
	<property name="plugins.home" value="${basedir}/.."/>
	<property name="core.dir" value="${basedir}/../verdi_core"/>
	<property name="bootstrap.dir" value="${basedir}/../verdi_bootstrap"/>
	<property name="loaders.dir" value="${basedir}/../verdi_data_loaders"/>
	<property name="saf.core.runtime.dir" value="${basedir}/../verdi_saf_core_runtime"/>
	<property name="saf.core.ui.dir" value="${basedir}/../verdi_saf_ui"/>
	
	<!--property name="linux.dist.name" value="${app.name}_${app.version}"/-->
	<!--property name="linux.dir" value="${dist.dir}/linux_dist"/-->
	<property name="versiondir" value="../verdi_core/src/anl/verdi/util" />
	<property name="versionbuild.dir" value="../verdi_core/bin/anl/verdi/util" />

	<path id="classpath">
		<pathelement location="../verdi_core/bin/" />
        <fileset dir="../verdi_core/lib">
            <include name="**/*.jar" />
        </fileset>
	</path>
	
	<target name="compile-version" depends="build-version">
        <javac srcdir="${versiondir}"
               destdir="${versionbuild.dir}"
               classpathref="classpath"
               debug="on"
        />
	</target>
	
    <target name="build-version"
            description="Build VERDI version" >
        <java classname="anl.verdi.util.WriteVersionInfo"
              fork="true"
              failonerror="true"
    	      classpathref="classpath" >
        	  <arg line="${app.version}"/>
        </java>
    </target>
	
	<target name="zip">
		<zip destfile="${dist.dir}/src.zip">
			<fileset dir="${plugins.home}">
				<include name="*/src/**/*" />
			</fileset>
		</zip>
	</target>

	<target name="jars">
		<jar destfile="${plugins.dist.dir}/bootstrap/bootstrap.jar"
		     basedir="${bootstrap.dir}/bin"/>

		<jar destfile="${plugins.dist.dir}/bootstrap/lib/saf.core.runtime.jar"
			 basedir="${saf.core.runtime.dir}/bin"/>
		
		<jar destfile="${plugins.dist.dir}/core/core.jar"
		     basedir="${core.dir}/bin"/>

		<jar destfile="${plugins.dist.dir}/verdi.data.loaders/data_loaders.jar"
		     basedir="${loaders.dir}/bin"/>
		     
		<jar destfile="${plugins.dist.dir}/saf.core.ui/saf.core.ui.jar"
			basedir="${saf.core.ui.dir}/bin/"/>
		     
	</target>

	<target name="prep.dist" depends="compile-version">
		<delete dir="${plugins.dist.dir}" failonerror="false"/>
		<mkdir dir="${plugins.dist.dir}" />

		<copy todir="${plugins.dist.dir}/bootstrap">
			<fileset file="${bootstrap.dir}/boot.properties"/>
			<fileset file="${bootstrap.dir}/ui.properties"/>
		</copy>

		<copy todir="${plugins.dist.dir}/bootstrap/lib">
			<fileset dir="${bootstrap.dir}/lib"/>
		</copy>

		<copy todir="${plugins.dist.dir}/bootstrap/data">
			<fileset dir="${bootstrap.dir}/data"/>
		</copy>
		
		<copy todir="${plugins.dist.dir}/bootstrap/help">
			<fileset dir="${bootstrap.dir}/help"/>
		</copy>

		<jar destfile="${plugins.dist.dir}/bootstrap/bootstrap.jar"
		     basedir="${bootstrap.dir}/bin"/>

		<!-- saf.core.runtime -->
		<jar destfile="${plugins.dist.dir}/bootstrap/lib/saf.core.runtime.jar"
			 basedir="${saf.core.runtime.dir}/bin" />
		
		<copy todir="${plugins.dist.dir}/bootstrap/lib">
			<fileset file="${saf.core.runtime.dir}/lib" />
		</copy>
		
		<copy todir="${plugins.dist.dir}/bootstrap/help">
			<fileset file="${saf.core.runtime.dir}/help" />
		</copy>
		
		<copy todir="${plugins.dist.dir}/bootstrap/lib">
			<fileset file="${saf.core.runtime.dir}/dist-plugin.xml" />
			<mapper type="glob" from="dist_plugin.xml" to="plugin.xml"/>
		</copy>
		
		<!-- core -->
		<copy todir="${plugins.dist.dir}/core">
			<fileset file="${core.dir}/dist_plugin.xml"/>
			<mapper type="glob" from="dist_plugin.xml" to="plugin.xml"/>
		</copy>

		<copy todir="${plugins.dist.dir}/core/lib">
			<fileset dir="${core.dir}/lib"/>
		</copy>

		<copy todir="${plugins.dist.dir}/core/help">
			<fileset dir="${core.dir}/help"/>
		</copy>

		<copy todir="${plugins.dist.dir}/core/icons">
			<fileset dir="${core.dir}/icons"/>
		</copy>

		<jar destfile="${plugins.dist.dir}/core/core.jar"
		     basedir="${core.dir}/bin"/>

		<!-- data loaders -->
		<copy todir="${plugins.dist.dir}/verdi.data.loaders">
			<fileset file="${loaders.dir}/dist_plugin.xml"/>
			<mapper type="glob" from="dist_plugin.xml" to="plugin.xml"/>
		</copy>

		<copy todir="${plugins.dist.dir}/verdi.data.loaders/lib">
			<fileset dir="${loaders.dir}/lib">
				<exclude name="**/*.zip"/>
			</fileset>
		</copy>

		<jar destfile="${plugins.dist.dir}/verdi.data.loaders/data_loaders.jar"
		     basedir="${loaders.dir}/bin"/>

		<!-- saf ui -->
		<copy todir="${plugins.dist.dir}/saf.core.ui">
			<fileset file="${saf.core.ui.dir}/plugin.xml"/>
		</copy>

		<copy todir="${plugins.dist.dir}/saf.core.ui/lib">
			<fileset dir="${saf.core.ui.dir}/lib">
				<exclude name="**/*.zip"/>
			</fileset>
		</copy>

		<copy todir="${plugins.dist.dir}/saf.core.ui/icons">
			<fileset dir="${saf.core.ui.dir}/icons"/>
		</copy>
		
		<jar destfile="${plugins.dist.dir}/saf.core.ui/saf.core.ui.jar"
			 basedir="${saf.core.ui.dir}/bin"/>
		
	</target>

	<target name="build.win.dist" depends="prep.dist">
		
		<copy todir="${dist.dir}/jre1.7.0">
			<fileset dir="${JRE_HOME}"/>
		</copy>
		<unzip src="./distfiles/licenses.zip" dest="${dist.dir}"/>
		<unzip src="./distfiles/data.zip" dest="${dist.dir}"/>
	
		<copy todir="${dist.dir}">
			<fileset file="./distfiles/run.bat"/>
			<fileset file="./distfiles/verdi.ini"/>
			<fileset file="./distfiles/Functions.nsh"/>
			<fileset file="./distfiles/config.properties.TEMPLATE"/>
			<fileset file="./distfiles/win_shape2bin.zip"/>
			<fileset file="./distfiles/RELEASE-NOTES.txt"/>
			<fileset file="./distfiles/RemoteFileReader.tgz"/>
		</copy>
		
		<delete failonerror="false">
			<fileset dir="${dist.dir}">
				<include name="**/VERDI*.exe" />
			</fileset>
		</delete>
		
	</target>	

</project>
